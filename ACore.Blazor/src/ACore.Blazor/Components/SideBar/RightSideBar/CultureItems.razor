@using ACore.Blazor.Services
@using Microsoft.Extensions.Logging
@using System.Globalization
@using ACore.Blazor.Configuration
@using ACore.Blazor.Modules.Analytics
@using ACore.Blazor.Modules.Analytics.Models
@using ACore.Blazor.Services.App.Models
@using Telerik.Blazor.Components.PanelBar.Models
@inherits ACoreComponentBase

<Testable TestId=@(nameof(CultureItems))>
    <TelerikPanelBar Data="_rootItems" OnItemClick="LanguageChange">
        <PanelBarBindings>
            <PanelBarBinding ItemsField="Items"></PanelBarBinding>
        </PanelBarBindings>
    </TelerikPanelBar>
</Testable>

@code {
    private List<PanelBarItem> _rootItems = new();

    [Inject]
    private IJSRuntime JsRuntime { get; set; } = null!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = null!;

    protected override void OnInitialized()
    {
        foreach (var item in ACoreBlazorAvailableLanguage.AllSupportedLanguages)
        {
            _rootItems.Add(new PanelBarItem
            {
                Id = item.LCID,
                Text = item.Text,
                Icon = item.Icon,
                DataItem = item
            });
        }
    }

    public async Task LanguageChange(PanelBarItemClickEventArgs panelBarItem)
    {
        var lang = (((panelBarItem.Item as PanelBarItem)!).DataItem as LanguageItem)!;
        if (CultureInfo.CurrentUICulture.LCID == lang.LCID)
            return;

        Log.LogInformation("Change culture {culture}", lang.LCID);
        await Mediator.Send(new WriteAnalyticsCommand(new AnalyticsData
            { AnalyticsTypeEnum = AnalyticsTypeEnum.UI, 
                Name = AnalyticsName.CultureChange, 
                Value = lang.LCID.ToString() }));
        await JsRuntime.SetAspNetCoreCultureCookie(lang.Id);
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

}